{"ast":null,"code":"var _jsxFileName = \"C:\\\\cooking master\\\\frontend\\\\src\\\\components\\\\PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getPostsByUserId, deletePost } from '../services/api';\nimport { formatDistanceToNow } from 'date-fns';\nimport { FaEdit, FaTrash } from 'react-icons/fa';\nimport './PostList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = ({\n  userId\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n  const currentUserId = localStorage.getItem('userId');\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const userPosts = await getPostsByUserId(userId);\n        setPosts(userPosts);\n        setLoading(false);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error fetching posts:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to load posts. Please try again.');\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, [userId]);\n  const handleEdit = postId => {\n    navigate(`/edit-post/${postId}`);\n  };\n  const handleDelete = async postId => {\n    if (window.confirm('Are you sure you want to delete this post?')) {\n      try {\n        await deletePost(postId);\n        setPosts(posts.filter(post => post.id !== postId));\n        alert('Post deleted successfully!');\n      } catch (err) {\n        console.error('Error deleting post:', err);\n        alert('Failed to delete post. Please try again.');\n      }\n    }\n  };\n  const formatTimestamp = date => {\n    try {\n      return formatDistanceToNow(new Date(date), {\n        addSuffix: true\n      });\n    } catch (error) {\n      console.error('Error formatting timestamp:', error);\n      return 'Unknown time';\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posts-grid\",\n      children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: post.username ? post.username.charAt(0).toUpperCase() : 'U'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-meta\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-username\",\n              children: post.username || 'Unknown User'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"post-timestamp\",\n              children: formatTimestamp(post.createdAt)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"post-title\",\n          children: post.title || 'Untitled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"post-description\",\n          children: post.description || 'No description available.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), post.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: post.image,\n          alt: post.title || 'Post image',\n          className: \"post-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), currentUserId === userId && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"edit-btn\",\n            onClick: () => handleEdit(post.id),\n            children: [/*#__PURE__*/_jsxDEV(FaEdit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), \" Edit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-btn\",\n            onClick: () => handleDelete(post.id),\n            children: [/*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), \" Delete\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-posts\",\n      children: \"You haven't created any posts yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(PostList, \"Ot5FfJoneRKcXmfu3Nt8o7K7Vqs=\", false, function () {\n  return [useNavigate];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getPostsByUserId","deletePost","formatDistanceToNow","FaEdit","FaTrash","jsxDEV","_jsxDEV","PostList","userId","_s","posts","setPosts","error","setError","loading","setLoading","navigate","currentUserId","localStorage","getItem","fetchPosts","userPosts","err","_err$response","_err$response$data","console","response","data","message","handleEdit","postId","handleDelete","window","confirm","filter","post","id","alert","formatTimestamp","date","Date","addSuffix","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","username","charAt","toUpperCase","createdAt","title","description","image","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/cooking master/frontend/src/components/PostList.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { getPostsByUserId, deletePost } from '../services/api';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport { FaEdit, FaTrash } from 'react-icons/fa';\r\nimport './PostList.css';\r\n\r\nconst PostList = ({ userId }) => {\r\n  const [posts, setPosts] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const navigate = useNavigate();\r\n  const currentUserId = localStorage.getItem('userId');\r\n\r\n  useEffect(() => {\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const userPosts = await getPostsByUserId(userId);\r\n        setPosts(userPosts);\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error('Error fetching posts:', err);\r\n        setError(err.response?.data?.message || 'Failed to load posts. Please try again.');\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchPosts();\r\n  }, [userId]);\r\n\r\n  const handleEdit = (postId) => {\r\n    navigate(`/edit-post/${postId}`);\r\n  };\r\n\r\n  const handleDelete = async (postId) => {\r\n    if (window.confirm('Are you sure you want to delete this post?')) {\r\n      try {\r\n        await deletePost(postId);\r\n        setPosts(posts.filter((post) => post.id !== postId));\r\n        alert('Post deleted successfully!');\r\n      } catch (err) {\r\n        console.error('Error deleting post:', err);\r\n        alert('Failed to delete post. Please try again.');\r\n      }\r\n    }\r\n  };\r\n\r\n  const formatTimestamp = (date) => {\r\n    try {\r\n      return formatDistanceToNow(new Date(date), { addSuffix: true });\r\n    } catch (error) {\r\n      console.error('Error formatting timestamp:', error);\r\n      return 'Unknown time';\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading-spinner\">Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"post-list-container\">\r\n      <h2>Your Posts</h2>\r\n      {error && <p className=\"error-message\">{error}</p>}\r\n      {posts.length > 0 ? (\r\n        <div className=\"posts-grid\">\r\n          {posts.map((post) => (\r\n            <div key={post.id} className=\"post-card\">\r\n              <div className=\"post-header\">\r\n                <div className=\"user-avatar\">\r\n                  <span>{post.username ? post.username.charAt(0).toUpperCase() : 'U'}</span>\r\n                </div>\r\n                <div className=\"post-meta\">\r\n                  <span className=\"post-username\">{post.username || 'Unknown User'}</span>\r\n                  <span className=\"post-timestamp\">{formatTimestamp(post.createdAt)}</span>\r\n                </div>\r\n              </div>\r\n              <h3 className=\"post-title\">{post.title || 'Untitled'}</h3>\r\n              <p className=\"post-description\">{post.description || 'No description available.'}</p>\r\n              {post.image && (\r\n                <img\r\n                  src={post.image}\r\n                  alt={post.title || 'Post image'}\r\n                  className=\"post-image\"\r\n                />\r\n              )}\r\n              {currentUserId === userId && (\r\n                <div className=\"post-actions\">\r\n                  <button className=\"edit-btn\" onClick={() => handleEdit(post.id)}>\r\n                    <FaEdit /> Edit\r\n                  </button>\r\n                  <button className=\"delete-btn\" onClick={() => handleDelete(post.id)}>\r\n                    <FaTrash /> Delete\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p className=\"no-posts\">You haven't created any posts yet.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}